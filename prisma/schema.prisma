// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum PostState {
  HIDDEN // 나만 볼 수 있음
  PRIVATE // 링크가 있는 사용자가 볼 수 있음
  SAVED // 임시 저장
  PUBLISHED // 모두가 볼 수 있음
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  subTitle  String
  body      String
  place     String    @default("지구")
  state     PostState @default(PUBLISHED)
  createdAt DateTime  @default(now())
  author    User?     @relation(fields: [authorId], references: [id])
  authorId  Int?
}

model Image {
  id        String   @id @default(uuid()) @db.Uuid
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  path      String   @db.VarChar(255)
  filesize  Int
  type      String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map(name: "email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  posts         Post[]
  Image         Image[]

  @@map(name: "users")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")


  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}
